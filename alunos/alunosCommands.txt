
------------------------------------dados------------------------------------
"alunos": [
        # {
        #     "id": 1, 
        #     "nome": "Camila", 
        #     "idade": 20, 
        #     "turma_id": 1, 
        #     "data_nascimento": date(2025,3,14),
        #     "nota_primeiro_semestre": 10.0,
        #     "nota_segundo_semestre": 9.0,
        #     "media_final": 9.5
        # },

        {
            "id": 2, 
            "nome": "Fernando", 
            "idade": 24, 
            "turma_id": 2, 
            "data_nascimento": date(2025,3,14),
            "nota_primeiro_semestre": 10.0,
            "nota_segundo_semestre": 8.0,
            "media_final": 9.0
        }
    ]

------------------------------------codigo------------------------------------


@app.route('/aluno', methods = ['GET'])
def getAlunos():
    dados = dicionario["alunos"]
    return jsonify(dados)

@app.route('/aluno/<int:id>', methods = ['GET'])
def getAluno(id):
    alunos = dicionario["alunos"]
    for aluno in alunos:
        if aluno['id'] == id:
            return jsonify(aluno)
    return jsonify({'Erro': f'Ocorreu um erro: Aluno não encontrada'})
        
@app.route('/aluno', methods = ['POST'])
def createAluno():
    try:
        dados = request.json
        if not dados:
            return jsonify({'erro':'ocorreu um erro dados invalidos ou ausentes'}) ,400
        aluno = dicionario["alunos"]
        aluno.append(dados) 
        return jsonify(dados)
    except Exception as e:
        return jsonify({'erro':f'Ocorreu um erro {e}'}), 500

@app.route('/aluno/<int:id>', methods=['PUT'])
def updateAluno(id):
    alunos = dicionario["alunos"]
    for aluno in alunos:
        if aluno['id'] == id:
            dados = request.json
            aluno['nome'] = dados['nome']
            aluno['idade'] = dados['idade']
            aluno['turma_id'] = dados['turma_id']
            aluno['data_nascimento'] = dados['data_nascimento']
            aluno['nota_primeiro_semestre'] = dados['nota_primeiro_semestre']
            aluno['nota_segundo_semestre'] = dados['nota_segundo_semestre']
            aluno['media_final'] = dados['media_final']
            return jsonify(dados)
     
    return jsonify({'Erro': f'Ocorreu um erro: Aluno não encontrada'})
        
@app.route('/aluno/<int:id>', methods=['PATCH'])    
def PatchUpdateAluno(id):
    alunos = dicionario['alunos']
    dados = request.json
    for aluno in alunos :
        if aluno['id'] == id:
            for chave in dados.keys():
                aluno[chave] = dados[chave] 
            if dados.keys():
                return jsonify(aluno)  

    if not dados.keys():
        return jsonify({'Erro': "Ocorreu um erro: Nenhum parâmetro foi alterado"})

    return jsonify({'Erro': "Ocorreu um erro: Aluno não encontrado"})
        
@app.route('/aluno/<int:id>', methods=['DELETE'])
def deleteAluno(id):
    alunos = dicionario["alunos"]
    for aluno in alunos:
        if aluno['id'] == id:
            index = alunos.index(aluno)
            alunos.pop(index)
            return jsonify(aluno)
    return jsonify({'Erro': f'Ocorreu um erro: Aluno não encontrada'})